This is an example of how to make a simple ER using a real world example.

Let's say I want to create a Reservation System for a Hotel. The Hotel allows Guests to come, find a room and price
they like and reserve the Room.

Now, we have to think about some of the rules that are involved when creating the system and how we need to represent the
data in our database.

1- A Guest can have more then 1 reservation. This means a Guest might reserve more then 1 Room.
2- A Room can only be reserved by 1 Guest during a specific date range. This means if a Guest reserves Room 15 from 
Aug. 15 - 18, no other Guest can use that Room until after Aug 18.
3- We want to have a Listing of all Rooms that are available so Guests can select Rooms they want to reserve.

So looking at the Nouns and actions, this can help us design our database. We have Guests, Rooms, Reservations and Listings.

A Guest Table would have the standard data points we want to capture.
guestId
firstName 
lastName
email
address1
address2
city
state
zip


A Room Table would also have simple data points.
roomId
roomNumber 
numberOfOccupents
bedOptions


A Reservation Table
guestId
roomId
dateRange

A Listing Table
RoomId
dateRange
price



CREATE TABLE `listing` (
  `listing_id` int NOT NULL AUTO_INCREMENT,
  `room_id` int NOT NULL,
  `price` double NOT NULL,
  PRIMARY KEY (`listing_id`),
  KEY `room_id` (`room_id`),
  CONSTRAINT `listing_ibfk_1` FOREIGN KEY (`room_id`) REFERENCES `room` (`room_id`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


/**
 * Total listings
 */
SELECT COUNT(listing_id) AS TOTAL_NUMBER_OF_LISTINGS
FROM listing

SELECT COUNT(listing_id) AS TOTAL_NUMBER_OF_LISTINGS FROM listing

/**
 * Average price of the listings
 */
SELECT AVG(price) AS AVERAGE_PRICE
FROM listing

/**
 * cheapest film
 */
SELECT MIN(price) AS CHEAPEST_LISTING
FROM listing

/**
 * Most expensive
 */
SELECT MAX(price) AS MOST_EXPENSIZE_LISTING
FROM listing
















